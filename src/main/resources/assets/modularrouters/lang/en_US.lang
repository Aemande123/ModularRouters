# Items
item.blankModule.name=Blank Module
item.receiverModule.name=Receiver Module
item.pullerModule.name=Puller Module
item.sender1Module.name=Sender Module Mk1
item.sender2Module.name=Sender Module Mk2
item.sender3Module.name=Sender Module Mk3
item.sorterModule.name=Sorter Module
item.vacuumModule.name=Vacuum Module
item.dropperModule.name=Dropper Module
item.placerModule.name=Placer Module
item.breakerModule.name=Breaker Module
item.voidModule.name=Void Module
item.detectorModule.name=Detector Module
item.modsorterModule.name=Mod Sorter Module
item.flingerModule.name=Flinger Module
item.playerModule.name=Player Module
item.blankUpgrade.name=Blank Upgrade
item.speedUpgrade.name=Speed Upgrade
item.stackUpgrade.name=Stack Upgrade
item.rangeUpgrade.name=Range Upgrade
item.securityUpgrade.name=Security Upgrade
item.overrideCard.name=Security Override Card

# Blocks
tile.itemRouter.name=Item Router

# Tab Group
itemGroup.modularrouters=Modular Routers

# GUI Labels & tooltips
guiText.tooltip.BLACKLIST.1=Whitelist
guiText.tooltip.IGNORE_META.1=Match Metadata
guiText.tooltip.IGNORE_NBT.1=Match NBT
guiText.tooltip.IGNORE_OREDICT.1=Use Oredict
guiText.tooltip.TERMINATE.1=Continue Execution on Match//The item router will continue executing subsequent modules, even if this module processes an item.
guiText.tooltip.BLACKLIST.2=Blacklist
guiText.tooltip.IGNORE_META.2=Ignore Metadata
guiText.tooltip.IGNORE_NBT.2=Ignore NBT
guiText.tooltip.IGNORE_OREDICT.2=Don't use Oredict
guiText.tooltip.TERMINATE.2=Terminate Execution on Match//If this module processes an item, the item router won't execute any subsequent modules on this tick.
guiText.tooltip.NONE=None
guiText.tooltip.DOWN=Down
guiText.tooltip.UP=Up
guiText.tooltip.LEFT=Left
guiText.tooltip.RIGHT=Right
guiText.tooltip.FRONT=Front
guiText.tooltip.BACK=Back
guiText.tooltip.redstone.ALWAYS=Redstone Mode: §eAlways
guiText.tooltip.redstone.LOW=Redstone Mode: §eLow
guiText.tooltip.redstone.HIGH=Redstone Mode: §eHigh
guiText.tooltip.redstone.NEVER=Redstone Mode: §eNever
guiText.tooltip.redstone.PULSE=Redstone Mode: §ePulsed
guiText.tooltip.flinger.speed=§bSpeed (0.0 → 20.0)
guiText.tooltip.flinger.pitch=§bPitch (-90.0 → 90.0)
guiText.tooltip.flinger.yaw=§bYaw (-60.0 → 60.0)
guiText.tooltip.flinger.common=Type a value, use §eCursor Up/Down§r, or mouse wheel to adjust.//§fHold §eShift§r for fine adjustment//§fHold §eCtrl§r for coarse adjustment
guiText.tooltip.detectorHint=Type a redstone signal level, use §eCursor Up/Down§r, or mouse wheel to adjust.//§fUse toggle button to emit a weak or strong signal.
guiText.label.direction=Direction
guiText.label.modules=Modules
guiText.label.upgrades=Upgrades
guiText.label.buffer=Buffer
guiText.label.installed= (installed)
guiText.label.playerOp.EXTRACT=Extract
guiText.label.playerOp.INSERT=Insert
guiText.label.playerSect.MAIN=Main
guiText.label.playerSect.ARMOR=Armor
guiText.label.playerSect.OFFHAND=Offhand

# Config GUI
gui.config.mainTitle=Modular Routers Configuration
gui.config.ctgy.router=Routers
gui.config.ctgy.router.tooltip=Config settings for Item Routers
gui.config.ctgy.module=Modules
gui.config.ctgy.module.tooltip=Config settings for Item Router Modules
gui.config.baseTickRate=Base router tick rate (with no Speed Upgrades)
gui.config.ticksPerUpgrade=Tick rate reduction (speedup) per Speed Upgrade
gui.config.hardMinTicks=Hard minimum (fastest) router tick rate
gui.config.senderParticles=Show particle effects when a Sender Module sends an item
gui.config.placerParticles=Show particle effects when a Placer Module places a block
gui.config.breakerParticles=Show particle effects when a Breaker Module breaks a block
gui.config.vacuumParticles=Show particle effects when a Vacuum Module absorbs an item
gui.config.sender1BaseRange=Base Range for Sender Module Mk1 (no Range Upgrades)
gui.config.sender1MaxRange=Hard Maximum Range for Sender Module Mk1 (with Range Upgrades)
gui.config.sender2BaseRange=Base Range for Sender Module Mk2 (no Range Upgrades)
gui.config.sender2MaxRange=Hard Maximum Range for Sender Module Mk2 (with Range Upgrades)
gui.config.vacuumBaseRange=Base Range for Vacuum Module (no Range Upgrades)
gui.config.vacuumMaxRange=Hard Maximum Range for Vacuum Module (with Range Upgrades)
gui.config.configKey=Key to press (in the Item Router GUI) to configure installed Modules

# Item tooltips
itemText.misc.holdShift=Hold §e§oShift§r§7 for settings, §e§oCtrl§r§7 for info
itemText.misc.holdShiftUpgrade=Hold §e§oShift§r§7 for more info
itemText.misc.filterItems=item(s) in filter
itemText.misc.moduleCount=§fModules: §b%d
itemText.misc.upgradeCount=§f%s: §b%d
itemText.misc.routerConfigured=This router has been configured
itemText.misc.noItems=No Items
itemText.misc.IGNORE_META=Meta
itemText.misc.IGNORE_NBT=NBT
itemText.misc.IGNORE_OREDICT=Oredict
itemText.misc.TERMINATE=Termination
itemText.misc.flags=Flags
itemText.misc.stackUpgrade=Max. items processed per operation: %d//Max. useful upgrades: %d
itemText.misc.speedUpgrade=Router will tick every %.02f sec//Max. useful upgrades: %d
itemText.misc.rangeUpgradeTooltip=Extends range of modules:
itemText.misc.target=§eTarget: §bDIM %d | [%d %d %d] | %s
itemText.misc.enchantBreakerHint=This module can also be crafted with a §bSilk Touch§7 or §bFortune§7 Enchanted Book.
itemText.misc.configureHint=Press §e'%s'§7 to configure
itemText.misc.redstoneLevel=§eSignal Level: §b%d (%s)
itemText.misc.strongSignal.false=Weak
itemText.misc.strongSignal.true=Strong
itemText.misc.flingerDetails=§eSpeed: §b%f§f | §ePitch: §b%f§f | §eYaw: §b%f
itemText.misc.operation=Operation
itemText.security.tooltip=Protects router; only listed players can access the router.//Right-click a player to add them to this upgrade; shift-right click a player to remove them.
itemText.security.count=%d / %d other player(s):
itemText.security.owner=§eOwner: §b%s
itemText.targetValidation.OK=§a✔ Target OK
itemText.targetValidation.OUT_OF_RANGE=§c✘ Out of Range
itemText.targetValidation.NOT_LOADED=§c✘ Not Loaded
itemText.targetValidation.NOT_INVENTORY=§c✘ No Inventory

# Usage tooltips
itemText.usage.item.breakerModule=Breaks a block adjacent to the router in the module's configured direction, pulling it as an item into the router's buffer.
itemText.usage.item.dropperModule=Drops items from the router's buffer in the module's configured direction.
itemText.usage.item.placerModule=Places an item from the router's buffer as a block in the module's configured direction, if possible.
itemText.usage.item.pullerModule=Extracts items from an adjacent inventory in the module's configured direction, into the router's buffer.
itemText.usage.item.sender1Module=Sends items from the router's buffer to any inventory directly along an X/Y/Z axis up to %d blocks away (%d with Range Upgrades).//Clear line of sight required; opaque blocks will prevent sending.
itemText.usage.item.sender2Module=Sends items from the router's buffer to any inventory within a spherical range of %d blocks (%d with Range Upgrades).//Clear line of sight NOT required.//§oSneak + Right-Click a block to set target//§oLeft-Click to indicate current target's position
itemText.usage.item.sender3Module=Sends items from the router's buffer to any inventory in any dimension.//§oSneak + Right-Click a block to set target//§oLeft-Click to indicate current target's position
itemText.usage.item.sorterModule=Places items from the router's buffer into an adjacent inventory, IF there are already matching items in that inventory
itemText.usage.item.vacuumModule=Absorbs items in the world into the router's buffer, within a cubic range of %d blocks (up to %d with Range Upgrades).  Only collects items in the configured direction, or any direction if the direction is NONE.
itemText.usage.item.voidModule=§c*** CAUTION ***//Permanently destroys items in the buffer!
itemText.usage.item.detectorModule=Emits a redstone signal from the router in the module's configured direction IF the item in the router's buffer passes the module's filter.
itemText.usage.item.modsorterModule=Places items from the router's buffer into an adjacent inventory, IF there are already items from the same mod in that inventory.
itemText.usage.item.flingerModule=Throws item from the router's buffer potentially over a long distance.  Adjust speed, pitch & yaw from the module's GUI.
itemText.usage.item.playerModule=Remotely transfers items between a player's main or armor inventory and the router's buffer.

# Player chat messages
chatText.misc.targetSet=Target set: %s
chatText.security.accessDenied=§cAccess Denied
chatText.security.ADDED=Added player [%s]
chatText.security.REMOVED=Removed player [%s]
chatText.security.ERROR=Couldn't add player [%s] (internal error)
chatText.security.FULL=Security upgrade list full!
chatText.security.ALREADY_ADDED=Player [%s] is already on this upgrade
chatText.security.NOT_PRESENT=Player [%s] is not on this uprade