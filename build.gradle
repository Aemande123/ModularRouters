import groovy.json.JsonSlurper
import groovy.json.JsonOutput

// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

ext.configFile = file('build.properties')
ext.config = parseConfig(configFile)

version = config.mc_version + "-" + config.mod_version

minecraft {
    version = config.mc_version + "-" + config.forge_version
    mappings = config.mcp_mappings
    runDir = "run"
    replace '@VERSION@', project.version
	replaceIn 'ModularRouters.java'
}

repositories {
    jcenter { }
    maven {
        name "ProfMobius"
        url "http://mobiusstrip.eu/maven/"
    }
    maven { // TOP
        name = "tterrag maven"
        url = "http://maven.tterrag.com/"
    }
    maven {
        name = "guideapi"
        url = 'http://tehnut.info/maven/'
    }
    maven {
        name = "tesla"
        url = "http://maven.epoxide.xyz"
    }
    maven {
        name = "JEI"
        url = "http://dvs1.progwml6.com/files/maven"
    }
}

dependencies {
    deobfCompile group: "mcp.mobius.waila", name: "Waila", version: config.waila_version
    deobfCompile group: "mcjty.theoneprobe", name: "TheOneProbe", version: config.top_version
    deobfCompile "info.amerifrance.guideapi:Guide-API:${config.mc_version}-2.0.2-45"
    compile "net.darkhax.tesla:Tesla:${config.mc_version}-1.2.1.49"
    deobfCompile "mezz.jei:jei_${config.mc_version}:${config.jei_version}:api"
    runtime "mezz.jei:jei_${config.mc_version}:${config.jei_version}"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

idea { module { inheritOutputDirs = true } }

def parseConfig(File config) {
    config.withReader {
        def prop = new Properties()
        prop.load(it)
        return (new ConfigSlurper().parse(prop))
    }
}
